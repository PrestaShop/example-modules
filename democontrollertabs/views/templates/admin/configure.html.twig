{#**
 * Copyright since 2007 PrestaShop SA and Contributors
 * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License 3.0 (AFL-3.0).
 * It is also available through the world-wide-web at this URL: https://opensource.org/licenses/AFL-3.0
 *#}

{% extends '@Modules/democontrollertabs/views/templates/admin/layout.html.twig' %}

{% block controllerTitle %}{{ 'Configure controller'|trans({}, 'Modules.Controllertab.Admin') }}{% endblock %}

{% block controllerDescription %}
    <div class="row justify-content-center">
        <div class="col">
            <h2>Configure controller</h2>
            <p>
                This controller is an example of how to handle your module configuration in a Symfony controller.
                <ul>
                    <li>It is secured (you need special permission to access it)</li>
                    <li>Its url can be generated by legacy code or Symfony router</li>
                    <li>It is accessible via a Tab in the menu that is automatically generated on installation</li>
                    <li>When you <strong>configure</strong> this module in the Module Manager you are redirected to this controller</li>
                </ul>
            </p>

            <h3>Routing file</h3>
            <p>
                We define a route that uses the <code>ConfigureController</code>, it defines a <code>_legacy_controller</code> parameter that will be used for Security, and a <code>_legacy_link</code> parameter that is used to help generate the url with the <code>Link</code> legacy core class.
            </p>
            <pre>
                <code class="yaml">
# {your_module}/config/routes.yml
ps_controller_tabs_configure:
    path: /configure-tabs
    methods: [GET]
    defaults:
        _controller: 'PrestaShop\Module\DemoControllerTabs\Controller\Admin\ConfigureController::indexAction'
        _legacy_controller: 'AdminDemoControllerTabsConfigure'
        _legacy_link: 'AdminDemoControllerTabsConfigure'
                </code>
            </pre>

            <h3>Secured Controller</h3>
            <p>
                We use the <code>PrestaShopBundle\Security\Attribute\AdminSecurity</code> attribute to secure the controller, it will use the permissions associated to the configured <code>_legacy_controller</code> (which is defined as <code>AdminDemoControllerTabsConfigure</code> in the routing file).
            </p>
            <pre>
                <code class="php">
class ConfigureController extends PrestaShopAdminController
{
    public const TAB_CLASS_NAME = 'AdminDemoControllerTabsConfigure';

    #[AdminSecurity("is_granted('read', request.get('_legacy_controller'))")]
    public function indexAction(): Response
    {
        return $this->render('@Modules/democontrollertabs/views/templates/admin/configure.html.twig');
    }
}
                </code>
            </pre>

            <h3>Controller service definition</h3>
            <p>
              The controllers, starting from PrestaShop V9, should extend the <code>PrestaShopBundle\Controller\Admin\PrestaShopAdminController</code> class, when they do they must be defined as services. It is recommended to use the <code>autowire</code> and <code>autoconfigure</code> parameters to ease the configuration.
            </p>
            <pre>
              <code class="yaml">
services:
  PrestaShop\Module\DemoControllerTabs\Controller\Admin\ConfigureController:
    autowire: true
    autoconfigure: true
              </code>
            </pre>

            <h3>Automatic Tabs registration</h3>
            <pre>
                <code class="php">
    // Inside module class constructor
    $tabNames = [];
    foreach (Language::getLanguages(true) as $lang) {
        $tabNames[$lang['locale']] = $this->trans('Demo Controller Tabs', array(), 'Modules.Democontrollertabs.Admin', $lang['locale']);
    }
    $this->tabs = [
        [
            'route_name' => 'ps_controller_tabs_configure_index',
            'class_name' => 'AdminDemoControllerTabsConfigure',
            'visible' => true,
            'name' => $tabNames,
            'icon' => 'school',
            'parent_class_name' => 'IMPROVE',
        ],
    ];
                </code>
            </pre>

            <h3>Redirection for module configuration</h3>
            <pre>
                <code class="php">
    // In module class
    public function getContent()
    {
        Tools::redirectAdmin(
            $this->context->link->getAdminLink('AdminDemoControllerTabsConfigure')
        );
    }
                </code>
            </pre>
        </div>
    </div>
{% endblock %}
